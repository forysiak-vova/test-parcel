{"version":3,"sources":["js/01-gallery.js"],"names":["btn","document","querySelector","list","console","log","get","fetch","then","response","json","pererender","data","newData","reduce","acc","title","id","innerHTML","addEventListener","evt","target","nodeName","dataset","method","res","status","onClickBtn","headers","body","JSON","stringify","author"],"mappings":"AAAA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AACA,IAAMC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AAGAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,IAAMG,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SAAOC,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AAAE,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,GAA/E,CAAP,CADgB,CAGZ;AACA;AACA;AACA;AACA;AACH;AAEF,CAVD;;AAWAJ,GAAG,GAAGE,IAAN,CAAWG,UAAX;;AAGA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACvBR,EAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAY,UAACC,GAAD,EAAMH,IAAN;AAAA,WAAgBG,GAAG,gCAEpCH,IAAI,CAACI,KAF+B,4CAGvBJ,IAAI,CAACK,EAHkB,kCAAnB;AAAA,GAAZ,EAIJ,EAJI,CAAhB;AAMAd,EAAAA,IAAI,CAACe,SAAL,GAAiBL,OAAjB;AAEAV,EAAAA,IAAI,CAACgB,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,GAAG,EAAI;AACnC,QAAIA,GAAG,CAACC,MAAJ,CAAWC,QAAX,KAAwB,QAA5B,EAAsC;AACnClB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACC,MAAJ,CAAWE,OAAX,CAAmBN,EAA/B;AACA,UAAMA,EAAE,GAAGG,GAAG,CAACC,MAAJ,CAAWE,OAAX,CAAmBN,EAA9B;AACAV,MAAAA,KAAK,uCAAgCU,EAAhC,GAAsC;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAtC,CAAL,CACIhB,IADJ,CACS,UAAAiB,GAAG,EAAI;AACV,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACzB,cAAMb,QAAO,GAAGD,IAAI,CAACE,MAAL,CAAY,UAACC,GAAD,EAAMH,IAAN;AAAA,mBAAgBG,GAAG,gCAE/CH,IAAI,CAACI,KAF0C,4CAGlCJ,IAAI,CAACK,EAH6B,kCAAnB;AAAA,WAAZ,EAIf,EAJe,CAAhB;;AAMXd,UAAAA,IAAI,CAACe,SAAL,GAAiBL,QAAjB;AACc;AACJ,OAXJ;AAaF;AACH,GAlBD;AAmBF;;AAODb,GAAG,CAACmB,gBAAJ,CAAqB,OAArB,EAA8BQ,UAA9B;;AAEC,SAASA,UAAT,GAAsB;AACtBpB,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AAChCiB,IAAAA,MAAM,EAAE,MADwB;AAEhCI,IAAAA,OAAO,EAAE;AACT,sBAAgB;AADP,KAFuB;AAMhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAClBf,MAAAA,KAAK,EAAE,OADW;AAElBgB,MAAAA,MAAM,EAAE;AAFU,KAAf;AAN0B,GAAhC,CAAL,CADsB,CAapB;AACF","file":"01-gallery.82582570.js","sourceRoot":"..\\src","sourcesContent":["// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// console.log(SimpleLightbox);\n\n\n// import { galleryItems } from './gallery-items';\n\n// console.log(JSON.stringify(galleryItems));\n\n// // Change code below this line\n\n// const galleryContainer = document.querySelector('.gallery');\n// const cardsMarkup = createImgCardsMarkup(galleryItems);\n// galleryContainer.insertAdjacentHTML('beforeend', cardsMarkup);\n// galleryContainer.addEventListener('click', ongalleryContainerClick);\n\n// function createImgCardsMarkup(galleryItems) {\n//    return galleryItems.map(({preview, original}) => {\n   \n//       return  `\n//    <div class=\"gallery__item\">\n//   <a class=\"gallery__link\" href=\"${original}\">\n//     <img\n//       class=\"gallery__image\"\n//       src=\"${preview}\"\n//       data-source=\"${original}\"\n//       alt=\"Image description\"\n//     />\n//   </a>\n// </div>\n//    `\n//    }).join('');\n   \n// }\n\n// console.log(galleryItems);\n\n// function ongalleryContainerClick(e) {\n//    const isGalleryClass = e.target.classList.contains('.gallery__image');\n//    if (!isGalleryClass) {\n//       return;\n//    }\n//    console.log(e.target);\n   \n// };\n\n// // const instance = basicLightbox.create(`\n// // //     <img src=${original} width=\"800\" height=\"600\">\n// // // `)\n\n// // instance.show()\n\n\n// const lightbox = new SimpleLightbox(\".gallery a\", {\n//   captionSelector: \"img\", //Переключение на имидж\n//   captionsData: \"alt\", //Получение текста из Алт\n//   captionPosition: \"bottom\", //Подпись внизу\n//   captionDelay: 250, //Задержка 250 мс\n//   showCounter: false, //Счетчик выключен\n//   scrollZoom: false, //Масштабирование скролом отключено\n// });\n\nconst btn = document.querySelector('.btn');\nconst list = document.querySelector('.list');\n\n\nconsole.log(list);\n\nconst get = () => {\n  return fetch('http://localhost:3000/posts').then(response => { return response.json()})\n   \n      // .then(data => list.insertAdjacentHTML('beforeend', data.reduce((acc, el) => (acc +=\n      //    `<li>\n      //    <p>${el.title}</p>\n      //    <button>delete</button>\n      // </li>`)), ''));\n   // const render = res.reduce()\n   \n}\nget().then(pererender);\n\n\nfunction pererender(data) { \n   console.log(data);\n   const newData = data.reduce((acc, data) => (acc +=\n      `<li>\n         <p>${data.title}</p>\n         <button data-id=${data.id}>delete</button>\n      </li>`), '');\n   \n   list.innerHTML = newData\n\n   list.addEventListener('click', evt => { \n      if (evt.target.nodeName === 'BUTTON') { \n         console.log(evt.target.dataset.id);\n         const id = evt.target.dataset.id;\n         fetch(`http://localhost:3000/posts/${id}`, { method: 'DELETE' })\n            .then(res => { \n               if (res.status === 200) {\n              const newData = data.reduce((acc, data) => (acc +=\n      `<li>\n         <p>${data.title}</p>\n         <button data-id=${data.id}>delete</button>\n      </li>`), '');\n   \n   list.innerHTML = newData\n                }\n            });\n\n      }\n   })\n}\n\n\n\n\n\n\nbtn.addEventListener('click', onClickBtn);\n\n function onClickBtn() { \n fetch('http://localhost:3000/posts', {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n     \n      body: JSON.stringify({\n         title: 'test2',\n         author: 'stepan2'\n      }),\n })\n \n   // .then(response => response.json()).then(x => console.log(x.id))\n}\n\n\n\n"]}