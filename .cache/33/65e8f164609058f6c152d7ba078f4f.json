{"id":"js/03-feedback.js","dependencies":[{"name":"C:\\Users\\user\\Documents\\test-parcel\\package.json","includedInParent":true,"mtime":1638916382539},{"name":"lodash.throttle","loc":{"line":1,"column":21},"parent":"C:\\Users\\user\\Documents\\test-parcel\\src\\js\\03-feedback.js","resolved":"C:\\Users\\user\\Documents\\test-parcel\\node_modules\\lodash.throttle\\index.js"},{"name":"../css/common.css","loc":{"line":2,"column":7},"parent":"C:\\Users\\user\\Documents\\test-parcel\\src\\js\\03-feedback.js","resolved":"C:\\Users\\user\\Documents\\test-parcel\\src\\css\\common.css"},{"name":"../css/03-feedback.css","loc":{"line":3,"column":7},"parent":"C:\\Users\\user\\Documents\\test-parcel\\src\\js\\03-feedback.js","resolved":"C:\\Users\\user\\Documents\\test-parcel\\src\\css\\03-feedback.css"},{"name":"axios","loc":{"line":4,"column":18},"parent":"C:\\Users\\user\\Documents\\test-parcel\\src\\js\\03-feedback.js","resolved":"C:\\Users\\user\\Documents\\test-parcel\\node_modules\\axios\\index.js"},{"name":"regenerator-runtime","loc":{"line":5,"column":22},"parent":"C:\\Users\\user\\Documents\\test-parcel\\src\\js\\03-feedback.js","resolved":"C:\\Users\\user\\Documents\\test-parcel\\node_modules\\regenerator-runtime\\runtime.js"}],"generated":{"js":"\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nrequire(\"../css/common.css\");\n\nrequire(\"../css/03-feedback.css\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _regeneratorRuntime = require(\"regenerator-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"js/03-feedback.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"js/03-feedback.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"js/03-feedback.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"js/03-feedback.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"js/03-feedback.js","original":{"line":5,"column":0}}],"sources":{"js/03-feedback.js":"import throttle from 'lodash.throttle';\r\nimport '../css/common.css';\r\nimport '../css/03-feedback.css'\r\nimport axios from 'axios';\r\nimport  {async}  from 'regenerator-runtime';\r\n\r\n// const formData = { };\r\n// const refs = {\r\n//    form: document.querySelector('.feedback-form'),\r\n//    textarea: document.querySelector('.feedback-form textarea'),\r\n//    input: document.querySelector('.feedback-form input')\r\n// };\r\n\r\n// refs.form.addEventListener('submit', onFormSubmit);\r\n// refs.textarea.addEventListener('input', throttle(onTexareaInput, 500));\r\n// // refs.input.addEventListener('input', throttle(onInputEmail, 500));\r\n\r\n\r\n\r\n// refs.form.addEventListener('input', e => {\r\n   \r\n//    formData[e.target.name] = e.target.name;\r\n//    console.log(formData);\r\n\r\n//    localStorage.setItem('feedback-form-state2', JSON.stringify(formData))\r\n// });\r\n\r\n// populateTexterea();\r\n\r\n\r\n// // function onInputEmail(e) {\r\n// //    const email = e.target.value;\r\n// //     localStorage.setItem('feedback-form-state1',  email);\r\n\r\n   \r\n// // };\r\n\r\n// function onFormSubmit(e) {\r\n//    e.preventDefault();\r\n  \r\n//    e.currentTarget.reset();\r\n//    localStorage.removeItem('feedback-form-state');\r\n//    localStorage.removeItem('feedback-form-state1');\r\n//    console.log('відправляємо форму');\r\n  \r\n   \r\n// };\r\n\r\n// function onTexareaInput(e) {\r\n//     const message = e.target.value;\r\n//    localStorage.setItem('feedback-form-state', message);\r\n \r\n// };\r\n\r\n// function populateTexterea(e) {\r\n//    const savedMessage = localStorage.getItem('feedback-form-state');\r\n//    // const saveEmail = localStorage.getItem('feedback-form-state1');\r\n//    // if (savedMessage || saveEmail) {\r\n//    //    console.log(saveEmail);\r\n//    //    console.log(savedMessage);\r\n//    //    refs.textarea.value = savedMessage;\r\n//    //     refs.input.value = saveEmail;\r\n//    // };\r\n//     if (savedMessage) {\r\n//       // console.log(saveEmail);\r\n//       console.log(savedMessage);\r\n//       refs.textarea.value = savedMessage;\r\n//       //  refs.input.value = saveEmail;\r\n//    };\r\n \r\n// };\r\n\r\n// ====================================================================================\r\n\r\n// const formData = { };\r\n// const refs = {\r\n//    form: document.querySelector('.feedback-form'),\r\n//    textarea: document.querySelector('.feedback-form textarea'),\r\n//    // input: document.querySelector('.feedback-form input')\r\n// };\r\n\r\n// refs.form.addEventListener('submit', onFormSubmit);\r\n// refs.textarea.addEventListener('input', throttle(onTexareaInput, 500));\r\n// // refs.input.addEventListener('input', throttle(onInputEmail, 500));\r\n\r\n\r\n\r\n// refs.form.addEventListener('input', e => {\r\n   \r\n//    formData[e.target.name] = e.target.name;\r\n//    // console.log(formData);\r\n\r\n//    localStorage.setItem('feedback-form-state2', JSON.stringify(formData));\r\n//    // console.log(localStorage.getItem('feedback-form-state2'));\r\n  \r\n// });\r\n\r\n// populateTexterea();\r\n\r\n\r\n// // function onInputEmail(e) {\r\n// //    const email = e.target.value;\r\n// //     localStorage.setItem('feedback-form-state1',  email);\r\n\r\n   \r\n// // };\r\n\r\n// function onFormSubmit(e) {\r\n//    e.preventDefault();\r\n\r\n//    console.log(localStorage.getItem('feedback-form-state2'));\r\n//    e.currentTarget.reset();\r\n//    localStorage.removeItem('feedback-form-state2');\r\n//      localStorage.removeItem('feedback-form-state');\r\n//    // localStorage.removeItem('feedback-form-state1');\r\n//    // console.log('відправляємо форму');\r\n  \r\n   \r\n// };\r\n\r\n// function onTexareaInput(e) {\r\n//     const message = e.target.value;\r\n//    localStorage.setItem('feedback-form-state', message);\r\n \r\n// };\r\n\r\n// function populateTexterea(e) {\r\n//    const savedMessage = localStorage.getItem('feedback-form-state');\r\n//    // const saveEmail = localStorage.getItem('feedback-form-state1');\r\n//    // if (savedMessage || saveEmail) {\r\n//    //    console.log(saveEmail);\r\n//    //    console.log(savedMessage);\r\n//    //    refs.textarea.value = savedMessage;\r\n//    //     refs.input.value = saveEmail;\r\n//    // };\r\n//     if (savedMessage) {\r\n//       // console.log(saveEmail);\r\n//       console.log(savedMessage);\r\n//       refs.textarea.value = savedMessage;\r\n//       //  refs.input.value = saveEmail;\r\n     \r\n//    };\r\n \r\n// };\r\n\r\n// =================================================================================================\r\n\r\n// const formData = { };\r\n// const refs = {\r\n//    form: document.querySelector('.feedback-form'),\r\n//    textarea: document.querySelector('.feedback-form textarea'),\r\n//    input: document.querySelector('.feedback-form input')\r\n// };\r\n\r\n// refs.form.addEventListener('submit', throttle(onFormSubmit, 500));\r\n// refs.form.addEventListener('input', throttle(onFormInput, 500));\r\n\r\n// function onFormInput(e) {\r\n//     formData[e.target.name] = e.target.value;\r\n//    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\r\n  \r\n// };\r\n// populateTexterea();\r\n// function onFormSubmit(e) {\r\n//    e.preventDefault();\r\n//    const feedbackForm = localStorage.getItem('feedback-form-state');\r\n//    const parsForm = JSON.parse(feedbackForm);\r\n//    console.log(parsForm);\r\n//    // console.log(localStorage.getItem('feedback-form-state'));\r\n//    e.currentTarget.reset();\r\n//    localStorage.removeItem('feedback-form-state');\r\n// };\r\n\r\n// function populateTexterea(e) {\r\n//    const savedMessage = localStorage.getItem( 'feedback-form-state');\r\n   \r\n//     if (savedMessage) {\r\n      \r\n//       refs.textarea.value = savedMessage;\r\n//      refs.input.value = savedMessage;\r\n     \r\n//    };\r\n \r\n// };\r\n\r\n// ==============================================================\r\n\r\n// const formData = { };\r\n// const refs = {\r\n//    form: document.querySelector('.feedback-form'),\r\n//    textarea: document.querySelector('.feedback-form textarea'),\r\n//    input: document.querySelector('.feedback-form input')\r\n// };\r\n\r\n// refs.form.addEventListener('submit', throttle(onFormSubmit, 500));\r\n// refs.form.addEventListener('input', throttle(onFormInput, 500));\r\n\r\n// // populateTexterea();\r\n\r\n// function onFormInput(e) {\r\n//    //  formData[e.target.name] = e.target.value;\r\n//    // localStorage.setItem('feedback-form-state', JSON.stringify(formData));\r\n//    const formData = e.target.value;\r\n//    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\r\n  \r\n// };\r\n\r\n\r\n\r\n// function onFormSubmit(e) {\r\n//    e.preventDefault();\r\n\r\n//    const feedbackForm = localStorage.getItem('feedback-form-state');\r\n//    const parsForm = JSON.parse(feedbackForm);\r\n//    console.log(parsForm);\r\n//    // console.log(localStorage.getItem('feedback-form-state'));\r\n//    e.currentTarget.reset();\r\n//    localStorage.removeItem('feedback-form-state');\r\n// };\r\n\r\n// function populateTexterea(e) {\r\n//    const savedMessage = localStorage.getItem('feedback-form-state');\r\n//    // const localString = JSON.parse(savedMessage);\r\n//    // console.log(localString);\r\n\r\n//     if (savedMessage) {\r\n      \r\n//       refs.textarea.value = savedMessage;\r\n//      refs.input.value = savedMessage;\r\n     \r\n//    };\r\n \r\n// };\r\n// ====================================== ФІТБЕК ФОРМ =====================================\r\n\r\n// const formData = { };\r\n// const refs = {\r\n//    form: document.querySelector('.feedback-form'),\r\n//    textarea: document.querySelector('.feedback-form textarea'),\r\n//    input: document.querySelector('.feedback-form input')\r\n// };\r\n\r\n// refs.form.addEventListener('submit', throttle(onFormSubmit, 500));\r\n// refs.form.addEventListener('input', throttle(onFormInput, 500));\r\n\r\n// function onFormInput(e) {\r\n//     formData[e.target.name] = e.target.value;\r\n//    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\r\n//    const resData = new FormData(e);\r\n//    resData.array.forEach(element => {\r\n      \r\n//    });\r\n  \r\n  \r\n// };\r\n// populateTexterea();\r\n// function onFormSubmit(e) {\r\n//    e.preventDefault();\r\n//    const feedbackForm = localStorage.getItem('feedback-form-state');\r\n//    const parsForm = JSON.parse(feedbackForm);\r\n//    console.log(parsForm);\r\n\r\n//    // console.log(localStorage.getItem('feedback-form-state'));\r\n//    e.currentTarget.reset();\r\n//    localStorage.removeItem('feedback-form-state');\r\n// };\r\n\r\n// function populateTexterea(e) {\r\n//    const savedMessage = localStorage.getItem('feedback-form-state');\r\n//    const localString = JSON.parse(savedMessage);\r\n//    console.log(localString);\r\n\r\n//     if (savedMessage) {\r\n      \r\n//       refs.textarea.value = savedMessage;\r\n//      refs.input.value = savedMessage;\r\n     \r\n//    };\r\n \r\n// };\r\n\r\n// ====================================================== ASYNC AWAIT (firebase)===============================================================\r\n\r\n\r\n\r\n// const createUser =  options => {\r\n// return  axios.post(`${process.env.NODE_ENV_BASE_URL}/users.json`, options)\r\n   \r\n// }\r\n// const getUserInfo =  id => {\r\n// return  axios.get(`${process.env.NODE_ENV_BASE_URL}/users/${id}.json`)\r\n   \r\n// }\r\n\r\n// =======================================================================================================================================\r\n// createUser({\r\n//    \"name\": \"admin666666\",\r\n//    \"languege\": \"uk\",\r\n//    \"skill\": 'administration66666'\r\n// }).then(data => getUserInfo(data.data.name).then(user => console.log(user)));\r\n\r\n// async function renderUser() {\r\n// const user = await createUser({\r\n//    \"name\": \"admin2\",\r\n//    \"languege\": \"uk\",\r\n//    \"skill\": 'administration'\r\n// })\r\n// console.log(user)\r\n// }\r\n//  renderUser()\r\n\r\n// const render = async () => { \r\n//    const {data}  = await createUser({\r\n//       name: \"Pimky\",\r\n//       language: \"ger\",\r\n//       skill: \"sass\"\r\n//    });\r\n//    console.log(data)\r\n//    const info = await getUserInfo(data.name);\r\n//    console.log(info);\r\n// }\r\n// // console.log(process.env.NODE_ENV_BASE_URL);\r\n// render()\r\n"},"lineCount":null}},"error":null,"hash":"2dedd788e4ccd72392634fc6fce7028a","cacheData":{"env":{}}}